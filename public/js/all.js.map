{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["var appBuilder = function () {\r\n    \r\n    this.tooltip = function (configs) {\r\n        if (_.isNull(configs) || _.isUndefined(configs)) {\r\n            return;\r\n        } else {    \r\n            for(var k in configs) {\r\n                var config = configs[k];\r\n                var element = config.element ? config.element : null;\r\n                if (_.isNull(element)) {\r\n                    return;\r\n                }\r\n\r\n                if(_.isFunction(element.popup)) {\r\n                    element.popup({\r\n                        position : config.position ? config.position : 'right center',\r\n                        content : config.content ? config.content : ''\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.animate = function (configs) {\r\n        for(var k in configs) {\r\n            var config = configs[k];\r\n            var animate = config.animate ? config.animate : null;\r\n            if (_.isNull(animate)) {\r\n                continue;\r\n            } else {\r\n                var callback = config.callack ? config.callback : undefined;\r\n                if (_.isUndefined(callback)) {\r\n                    setTimeout(function () {\r\n                        animate.transition(config.animateName);\r\n                    }, 400);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.utils = new function () {\r\n        var parent = this;\r\n        /*format data send ajax from serialize data*/\r\n        var processData = function (data) {\r\n            if(_.contains(data, '&')) {\r\n                data = data.split('&');\r\n                var obj  = {};\r\n                for(var k in data) {\r\n                    if (_.contains(data[k], '=')) {\r\n                        var temp = data[k].split('=');\r\n                        if (Array.isArray(temp)) {\r\n                            obj[temp[0]] = temp[1];\r\n                        }\r\n                    }    \r\n                }\r\n                return obj;\r\n            };\r\n            return data;\r\n        };\r\n        /*common method send request with ajax*/\r\n        this.sendData = function (config) {\r\n            var request = $.ajax({\r\n                url : config.url ? config.url : '/login',  \r\n                data : processData(config.data ? config.data : null),\r\n                dataType : config.dataType ? config.dataType : 'json',\r\n                method : config.method ? config.method : 'POST',\r\n                complete  : function (res) {\r\n                    setTimeout(function () {\r\n                        loading('hide');\r\n                    }, (config.delay || 1000));\r\n                }\r\n            });\r\n\r\n            request.done(function (res) {\r\n                if (typeof config.callback === 'function') {\r\n                    config.callback(res);\r\n                }\r\n            })\r\n        };\r\n\r\n        this.loading = function (action, delay) {\r\n            var _loading = $('.loadingArea');\r\n            var _delay = delay ? delay : 1; \r\n            if (action === 'show') {\r\n                _loading.show(_delay);\r\n            } else {\r\n                _loading.hide(_delay); \r\n            }\r\n        };\r\n               \r\n    };\r\n\r\n    this.bindEvent = function (callback) {\r\n        return _.isFunction(callback) ? callback() : function(){};\r\n    }\r\n\r\n};\r\n\r\n/*init Component*/\r\nvar loginBuilder = (function (appBuilder) {\r\n    var appLogin = new appBuilder();\r\n\r\n    return {\r\n        tooltip : function () {\r\n            var configs = [\r\n                {\r\n                    element : $('input[name=\"password\"]'),\r\n                    content : 'Please enter password to login with your\"s account',\r\n                },\r\n                {\r\n                    element : $('input[name=\"email\"]'),\r\n                    content : 'Please enter email to login with your\"s account',\r\n                },\r\n            ];\r\n            appLogin.tooltip(configs);\r\n        },\r\n        animate : function () {\r\n            appLogin.animate([{\r\n                animate : $('.navbar-header'),\r\n                animateName : 'jiggle'\r\n            }]);\r\n        },\r\n        bindEvent : function () {\r\n            var btnLogin = $('.btn-login');\r\n            if (!_.isEmpty(btnLogin)) {\r\n                btnLogin.click(function (event) {\r\n                    var _form = $('.form-login');\r\n                    appLogin.utils.loading('show');\r\n                    appLogin.utils.sendData({\r\n                        url : 'login',\r\n                        data : _form.serialize()\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        build : function () {\r\n            this.tooltip();\r\n            this.animate();\r\n            this.bindEvent();\r\n        }   \r\n    }\r\n\r\n}(appBuilder))\r\n\r\n$(document).ready(function () {\r\n    loginBuilder.build();\r\n})\r\n"],"sourceRoot":"/source/"}