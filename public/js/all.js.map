{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["var appBuilder = function () {\n    \n    this.tooltip = function (configs) {\n        if (_.isNull(configs) || _.isUndefined(configs)) {\n            return;\n        } else {    \n            for(var k in configs) {\n                var config = configs[k];\n                var element = config.element ? config.element : null;\n                if (_.isNull(element)) {\n                    return;\n                }\n\n                if(_.isFunction(element.popup)) {\n                    element.popup({\n                        position : config.position ? config.position : 'right center',\n                        content : config.content ? config.content : ''\n                    })\n                }\n            }\n        }\n    };\n\n    this.animate = function (configs) {\n        for(var k in configs) {\n            var config = configs[k];\n            var animate = config.animate ? config.animate : null;\n            if (_.isNull(animate)) {\n                continue;\n            } else {\n                var callback = config.callack ? config.callback : undefined;\n                if (_.isUndefined(callback)) {\n                    setTimeout(function () {\n                        animate.transition(config.animateName);\n                    },400);\n                } else {\n                    callback();\n                }\n            }\n        }\n    }\n\n    this.utils = new function () {\n        var parent = this;\n        /*format data send ajax from serialize data*/\n        var processData = function (data) {\n            if(_.contains(data, '&')) {\n                data = data.split('&');\n                var obj  = {};\n                for(var k in data) {\n                    if (_.contains(data[k], '=')) {\n                        var temp = data[k].split('=');\n                        if (Array.isArray(temp)) {\n                            obj[temp[0]] = temp[1];\n                        }\n                    }    \n                }\n                return obj;\n            };\n            return data;\n        };\n        /*common method send request with ajax*/\n        this.sendData = function (config) {\n            var request = $.ajax({\n                url : config.url ? config.url : '/login',  \n                data : processData(config.data ? config.data : null),\n                dataType : config.dataType ? config.dataType : 'json',\n                method : config.method ? config.method : 'POST',\n                complete  : function (res) {\n                    setTimeout(function () {\n                        loading('hide');\n                    }, (config.delay || 1000));\n                }\n            });\n\n            request.done(function (res) {\n                if (typeof config.callback === 'function') {\n                    config.callback(res);\n                }\n            })\n        };\n\n        this.loading = function (action, delay) {\n            var _loading = $('.loadingArea');\n            var _delay = delay ? delay : 1; \n            if (action === 'show') {\n                _loading.show(_delay);\n            } else {\n                _loading.hide(_delay); \n            }\n        };\n               \n    };\n\n    this.bindEvent = function (callback) {\n        return _.isFunction(callback) ? callback() : function(){};\n    }\n\n};\n\n/*init Component*/\nvar loginBuilder = (function (appBuilder) {\n    var appLogin = new appBuilder();\n\n    return {\n        tooltip : function () {\n            var configs = [\n                {\n                    element : $('input[name=\"password\"]'),\n                    content : 'Please enter password to login with your\"s account',\n                },\n                {\n                    element : $('input[name=\"email\"]'),\n                    content : 'Please enter email to login with your\"s account',\n                },\n            ];\n            appLogin.tooltip(configs);\n        },\n        animate : function () {\n            appLogin.animate([{\n                animate : $('.navbar-header'),\n                animateName : 'jiggle'\n            }]);\n        },\n        bindEvent : function () {\n            var btnLogin = $('.btn-login');\n            if (!_.isEmpty(btnLogin)) {\n                btnLogin.click(function (event) {\n                    var _form = $('.form-login');\n                    appLogin.utils.loading('show');\n                    appLogin.utils.sendData({\n                        url : 'login',\n                        data : _form.serialize()\n                    });\n                });\n            }\n        },\n        build : function () {\n            this.tooltip();\n            this.animate();\n            this.bindEvent();\n        }   \n    }\n\n}(appBuilder))\n\n$(document).ready(function () {\n    loginBuilder.build();\n})\n"],"sourceRoot":"/source/"}