{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var appBuilder = function () {\r\n\r\n    this.tooltip = function (configs) {\r\n        if (_.isNull(configs) || _.isUndefined(configs)) {\r\n            return;\r\n        } else {\r\n            for (var k in configs) {\r\n                var config = configs[k];\r\n                var element = config.element ? config.element : null;\r\n                if (_.isNull(element)) {\r\n                    return;\r\n                }\r\n\r\n                if (_.isFunction(element.popup)) {\r\n                    element.popup({\r\n                        position: config.position ? config.position : 'right center',\r\n                        content: config.content ? config.content : ''\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.animate = function (configs) {\r\n        for (var k in configs) {\r\n            var config = configs[k];\r\n            var animate = config.animate ? config.animate : null;\r\n            if (_.isNull(animate)) {\r\n                continue;\r\n            } else {\r\n                var callback = config.callack ? config.callback : undefined;\r\n                if (_.isUndefined(callback)) {\r\n                    setTimeout(function () {\r\n                        animate.transition(config.animateName);\r\n                    }, 400);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.utils = new function () {\r\n        var parent = this;\r\n        /*format data send ajax from serialize data*/\r\n        var processData = function (data) {\r\n            if (_.contains(data, '&')) {\r\n                data = data.split('&');\r\n                var obj = {};\r\n                for (var k in data) {\r\n                    if (_.contains(data[k], '=')) {\r\n                        var temp = data[k].split('=');\r\n                        if (Array.isArray(temp)) {\r\n                            obj[temp[0]] = temp[1];\r\n                        }\r\n                    }\r\n                }\r\n                return obj;\r\n            }\r\n            ;\r\n            return data;\r\n        };\r\n        /*common method send request with ajax*/\r\n        this.sendData = function (config) {\r\n            var request = $.ajax({\r\n                url: config.url ? config.url : '',\r\n                data: config.data ? config.data : null,\r\n                dataType: config.dataType ? config.dataType : 'json',\r\n                type: config.method ? config.method : 'POST',\r\n                beforeSend: config.beforeSend ? config.beforeSend : function () {\r\n                }\r\n            });\r\n\r\n            request.done(function (res) {\r\n                if (typeof config.callback === 'function') {\r\n                    config.callback(res);\r\n                }\r\n            })\r\n        };\r\n\r\n        this.loading = function (action, delay) {\r\n            var _loading = $('.loadingArea');\r\n            var _delay = delay ? delay : 1;\r\n            if (action === 'show') {\r\n                _loading.show(_delay);\r\n            } else {\r\n                _loading.hide(_delay);\r\n            }\r\n        };\r\n\r\n        this.isset = function (val) {\r\n            return !_.isUndefined(val) && !_.isNull(val);\r\n        };\r\n\r\n        this.redirect = function (url) {\r\n            if (_.isNull(url) || _.isUndefined(url))\r\n                return;\r\n            window.open(url, '_blank');\r\n        };\r\n\r\n        this.validate = function (config) {\r\n            var validateRules = {};\r\n            for (var c in config.rules) {\r\n                validateRules[config.rules[c].id] = {\r\n                    identifier: config.rules[c].id,\r\n                    rules: [\r\n                        {\r\n                            type: config.rules[c].type ? config.rules[c].type : 'empty',\r\n                            prompt: config.rules[c].text ? config.rules[c].text : 'Please enter field information',\r\n                        }\r\n                    ],\r\n                }\r\n            }\r\n\r\n            config.form.form(validateRules, {\r\n                inline: true,\r\n                on: 'blur'\r\n            });\r\n        }\r\n    };\r\n\r\n    this.bindEvent = function (callback) {\r\n        return _.isFunction(callback) ? callback() : function () {\r\n        };\r\n    }\r\n\r\n};\r\n\r\n/*init Component*/\r\nvar loginBuilder = (function (appBuilder) {\r\n    var appLogin = new appBuilder();\r\n\r\n    return {\r\n        tooltip: function () {\r\n            var configs = [\r\n                {\r\n                    element: $('input[name=\"password\"]'),\r\n                    content: 'Please enter password to login with your\"s account',\r\n                },\r\n                {\r\n                    element: $('input[name=\"email\"]'),\r\n                    content: 'Please enter email to login with your\"s account',\r\n                },\r\n            ];\r\n            appLogin.tooltip(configs);\r\n        },\r\n        animate: function () {\r\n            appLogin.animate([{\r\n                animate: $('.navbar-header'),\r\n                animateName: 'jiggle'\r\n            }]);\r\n        },\r\n        bindEvent: function () {\r\n            var btnLogin = $('.btn-login');\r\n            if (!_.isEmpty(btnLogin)) {\r\n                btnLogin.click(function (event) {\r\n                    var _form = $('.form-login');\r\n                    appLogin.utils.loading('show');\r\n                    appLogin.utils.sendData({\r\n                        url: 'login',\r\n                        data: _form.serialize()\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        build: function () {\r\n            this.tooltip();\r\n            this.animate();\r\n            this.bindEvent();\r\n        }\r\n    }\r\n}(appBuilder))\r\n\r\nvar courseBuilder = (function () {\r\n    var course = new appBuilder();\r\n\r\n    return {\r\n        tooltip: function () {\r\n            var configs = [\r\n                {\r\n                    element: $('.add-course'),\r\n                    position: 'top center',\r\n                    content: 'Add New Course'\r\n                },\r\n                {\r\n                    element: $('.del-course-multi'),\r\n                    position: 'top center',\r\n                    content: 'Delete Course Selected'\r\n                },\r\n                {\r\n                    element: $('.btn-excel'),\r\n                    position: 'top center',\r\n                    content: 'Export Excel'\r\n                },\r\n                {\r\n                    element: $('.btn-csv'),\r\n                    position: 'top center',\r\n                    content: 'Export CSV'\r\n                },\r\n            ];\r\n            course.tooltip(configs);\r\n        },\r\n        animate: function () {\r\n            course.animate([{\r\n                animate: $('.body-content'),\r\n                animateName: 'shake'\r\n            }]);\r\n        },\r\n        bindEvent: function () {\r\n            $('form[id=\"delRoute\"]').submit(function (e) {\r\n                e.preventDefault();\r\n            });\r\n            var input_all = $('input[name=\"select-all\"]');\r\n            input_all.change(function () {\r\n                var check = input_all.prop('checked');\r\n                var all_input = $('input[type=\"checkbox\"]');\r\n                if (check) {\r\n                    all_input.prop('checked', true);\r\n                } else {\r\n                    all_input.prop('checked', false);\r\n                }\r\n            });\r\n\r\n            $('.btn-confirm').click(function () {\r\n                var selected = localStorage.getItem('selected');\r\n                var courses = localStorage.getItem('courseList');\r\n                courses = JSON.parse(courses);\r\n                var input = $('input[name=\"select-all\"]');\r\n                var checkboxs = $('input[type=\"checkbox\"]');\r\n                if (input.prop('checked') && checkboxs.length > 1) {\r\n                    var courses = [];\r\n                    for (var i = 0; i < checkboxs.length; i++) {\r\n                        var element = $(checkboxs[i]);\r\n                        if (element.attr('name') !== 'select-all') {\r\n                            courses.push(element.val());\r\n                        }\r\n                    }\r\n                }\r\n                if (!course.utils.isset(selected) && courses !== undefined) {\r\n                    $.ajax({\r\n                        url: 'destroySelected',\r\n                        data: {\r\n                            ids: courses\r\n                        },\r\n                        type: 'POST',\r\n                        beforeSend: function () {\r\n                            $('#confirmModal').modal('hide');\r\n                            course.utils.loading('show');\r\n                        }\r\n                    }).done(function (res) {\r\n                        setTimeout(function () {\r\n                            for (var c in courses) {\r\n                                $('tr.row-' + parseInt(courses[c])).addClass('hide');\r\n                            }\r\n                            localStorage.clear();\r\n                            course.utils.loading('hide');\r\n                            $('.result-msg').show(1000);\r\n                            $('.result-msg-content').text('Delete Courses Success!');\r\n                            setTimeout(function () {\r\n                                $('.result-msg').hide(1000);\r\n                            }, 2000);\r\n                        }, 400)\r\n                    });\r\n                } else {\r\n                    var formName = 'delRoute' + selected;\r\n                    var _form = $('form[name=\"' + formName + '\"]');\r\n                    _form.unbind('submit');\r\n                    _form.submit();\r\n                }\r\n            });\r\n\r\n            $('.del-course').click(function () {\r\n                $('#confirmModal').modal('show');\r\n            });\r\n\r\n            $('.prompt').change(function () {\r\n                course.utils.loading('show');\r\n                $('input[name=\"term\"]').val($('.prompt').val());\r\n                setTimeout(function () {\r\n                    $('form[name=\"search\"]').submit();\r\n                }, 500);\r\n            });\r\n\r\n            $('#confirmModal').on('hidden.bs.modal', function () {\r\n                $('.modal-body').text('Are you sure?');\r\n                localStorage.removeItem('selected');\r\n                $('.btn-confirm').prop('disabled', false);\r\n            });\r\n\r\n            $('.del-course-multi').click(function () {\r\n                var courses = localStorage.getItem('courseList');\r\n                var checkall = $('input[name=\"select-all\"]').prop('checked');\r\n                if ((_.isUndefined(courses) || _.isNull(courses)) && !checkall) {\r\n                    $('.modal-body').text('Please select courses before delete!');\r\n                    $('.btn-confirm').prop('disabled', true);\r\n                    $('#confirmModal').modal('show');\r\n                    return;\r\n                } else {\r\n                    $('#confirmModal').modal('show');\r\n                }\r\n            });\r\n\r\n            $('.dropdown-entry').change(function () {\r\n                course.utils.loading('show');\r\n                $('input[name=\"entry\"]').val($('.dropdown-entry').val());\r\n                $('form[name=\"show-entry\"]').submit();\r\n            });\r\n\r\n            $('input[name=\"elementAll\"]').click(function () {\r\n                var check = $('input[name=\"elementAll\"]').prop('checked');\r\n                var input = $('input[type=\"checkbox\"]');\r\n                var data = [];\r\n                for (var i = 0; i < input.length; i++) {\r\n                    if (input[i].hasAttribute('element')) {\r\n                        data.push($(input[i]).val());\r\n                    }\r\n                }\r\n                if (check) {\r\n                    $(input).prop('checked', true);\r\n                    $('input[name=\"subjectData\"]').val(data);\r\n                } else {\r\n                    $(input).prop('checked', false);\r\n                    $('input[name=\"subjectData\"]').val('');\r\n                }\r\n            })\r\n\r\n            $('form[name=\"CI\"]').submit(function (e) {\r\n                e.preventDefault();\r\n            })\r\n\r\n            $('.btn-ci').click(function () {\r\n                $('form[name=\"CI\"]').unbind('submit');\r\n                course.utils.validate({\r\n                    form: $('form[name=\"CI\"]'), rules: [\r\n                        {\r\n                            id: 'name',\r\n                            text: 'Please enter course name'\r\n                        },\r\n                        {\r\n                            id: 'description',\r\n                            text: 'Please enter course description'\r\n                        }\r\n                    ]\r\n                });\r\n                var input = $('input[type=\"checkbox\"]');\r\n                var data = [];\r\n                for (var i = 0; i < input.length; i++) {\r\n                    var isCheck = $(input[i]).prop('checked');\r\n                    if (isCheck && input[i].hasAttribute('element')) {\r\n                        data.push($(input[i]).val());\r\n                    }\r\n                }\r\n                $('input[name=\"subjectData\"]').val(data);\r\n                $('form[name=\"CI\"]').submit();\r\n            });\r\n\r\n            (function () {\r\n                var input = $('input[type=\"checkbox\"]');\r\n                for (var i = 0; i < input.length; i++) {\r\n                    if (input[i].hasAttribute('element')) {\r\n                        var _input = $(input[i]);\r\n                        if (_input.attr('belongCourse') == \"true\") {\r\n                            _input.prop('checked', true);\r\n                        } else continue;\r\n                    }\r\n                }\r\n            }());\r\n        },\r\n        saveSelect: function (id) {\r\n            localStorage.setItem('selected', id);\r\n        },\r\n        saveStorage: function (id) {\r\n            var checked = $('input[name=\"radio-' + id + '\"]').prop('checked');\r\n            var list = localStorage.getItem('courseList');\r\n            list = _.isUndefined(list) || _.isNull(list) ? null : JSON.parse(list);\r\n            if (_.isArray(list) && !_.isEmpty(list)) {\r\n                var find = _.find(list, function (element) {\r\n                    return id === element;\r\n                });\r\n                if (find === undefined) {\r\n                    if (checked) {\r\n                        list.push(id);\r\n                    }\r\n                    localStorage.setItem('courseList', JSON.stringify(list));\r\n                } else {\r\n                    if (!checked) {\r\n                        var index = _.indexOf(list, \"\" + id);\r\n                        list.splice(index, 1);\r\n                        localStorage.setItem('courseList', JSON.stringify(list));\r\n                    }\r\n                }\r\n            } else {\r\n                if (checked) {\r\n                    localStorage.setItem('courseList', JSON.stringify([id]));\r\n                }\r\n            }\r\n        },\r\n        utils: function () {\r\n            return course.utils;\r\n        },\r\n        build: function () {\r\n            localStorage.clear();\r\n            this.tooltip();\r\n            this.animate();\r\n            this.bindEvent();\r\n        }\r\n    }\r\n\r\n}(appBuilder))\r\n\r\n$(document).ready(function () {\r\n    $.ajaxSetup({\r\n        headers: {'X-CSRF-Token': $('meta[name=_token]').attr('content')}\r\n    });\r\n    loginBuilder.build();\r\n    courseBuilder.build();\r\n})\r\n"],"sourceRoot":"/source/"}